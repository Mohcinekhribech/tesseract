services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tesseract-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tesseract
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tesseract123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tesseract-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tesseract"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tesseract-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:tesseract123@postgres:5432/tesseract
      - NEXTAUTH_SECRET=tesseract-super-secret-key-change-in-production
      - NEXTAUTH_URL=http://87.106.10.121:3000
      - RESEND_API_KEY=re_placeholder_key_for_build
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tesseract-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Setup Service (runs once)
  db-setup:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tesseract-db-setup
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:tesseract123@postgres:5432/tesseract
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tesseract-network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 15 &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Creating admin user...' &&
        npx ts-node script/createAdmin.ts &&
        echo 'Database setup complete!'
      "
    restart: "no"

volumes:
  postgres_data:

networks:
  tesseract-network:
    driver: bridge
